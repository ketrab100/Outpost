--------------------------------------------------------
--  Poprawiona wersja z sekwencjami; mieliśmy problem
-- z dropami, ze względu na brak odpowiedzi ze strony
-- SQL developera.
--------------------------------------------------------

drop table logs;
drop table parcels;
drop table users;
drop table warehouses;
drop table parcellockers;
drop table locations;
drop table parceltypes;
drop table parcellockertypes;
drop table statuses;
drop sequence location_id_seq;
drop sequence user_id_seq;
drop sequence warehouse_id_seq;
drop sequence parcellocker_id_seq;
drop sequence parcellockertype_id_seq;
drop sequence parceltype_id_seq;
drop sequence status_id_seq;
drop view courierparcelview;
drop view clientparcelview;
drop view personalview;

--------------------------------------------------------
--  File created - Tuesday-May-25-2021   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence LOCATION_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  LOCATION_ID_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PARCELLOCKER_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  PARCELLOCKER_ID_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PARCELLOCKERTYPE_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  PARCELLOCKERTYPE_ID_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PARCELTYPE_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  PARCELTYPE_ID_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence STATUS_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  STATUS_ID_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence USER_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  USER_ID_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence WAREHOUSE_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  WAREHOUSE_ID_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table LOCATIONS
--------------------------------------------------------

  CREATE TABLE LOCATIONS
   (	"LOCATION_ID" NUMBER(*,0) CONSTRAINT "LOCATIONS_PK" PRIMARY KEY, 
	"CITY" VARCHAR(50) NOT NULL, 
	"STREET" VARCHAR(200) NOT NULL, 
	"NEARESTBUILDINGNUMBER" NUMBER(*,0) NOT NULL, 
	"POSTCODE" NUMBER(5,0) NOT NULL
   )
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PARCELLOCKERS
--------------------------------------------------------

  CREATE TABLE PARCELLOCKERS
   (	"PARCELLOCKER_ID" NUMBER(*,0) CONSTRAINT "PARCELLOCKERS_PK" PRIMARY KEY, 
	"LOCATIONID" NUMBER(*,0) NOT NULL, 
	"TYPEID" NUMBER(*,0) NOT NULL, 
	"NAME" VARCHAR(10) NOT NULL
   ) 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PARCELLOCKERTYPES
--------------------------------------------------------

  CREATE TABLE PARCELLOCKERTYPES
   (	"PARCELLOCKERTYPE_ID" NUMBER(*,0) CONSTRAINT "PARCELLOCKERTYPES_PK" PRIMARY KEY, 
	"NAME" VARCHAR2(20 BYTE) NOT NULL, 
	"SIZEALOCKERS" NUMBER(*,0) NOT NULL, 
	"SIZEBLOCKERS" NUMBER(*,0) NOT NULL, 
	"SIZECLOCKERS" NUMBER(*,0) NOT NULL
   )
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PARCELS
--------------------------------------------------------

  CREATE TABLE PARCELS
   (	"CODE" VARCHAR2(24 BYTE) CONSTRAINT "PARCELS_PK"  PRIMARY KEY,
	"TYPEID" NUMBER(*,0) NOT NULL, 
	"COURIERID" NUMBER(*,0), 
	"LORRYDRIVERID" NUMBER(*,0), 
	"SENDERID" NUMBER(*,0) NOT NULL, 
	"PARCELLOCKERID" NUMBER(*,0), 
	"DESTINATIONPARCELLOCKERID" NUMBER(*,0) NOT NULL, 
	"WAREHOUSEID" NUMBER(*,0), 
	"SENTDATE" DATE, 
	"STATUSID" NUMBER(*,0) NOT NULL, 
	"PICKUPCODE" NUMBER(7,0) NOT NULL, 
	"LOCKERNUMBER" NUMBER(*,0)
   )
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PARCELTYPES
--------------------------------------------------------

  CREATE TABLE PARCELTYPES
   (	"PARCELTYPE_ID" NUMBER(*,0) CONSTRAINT "PARCELTYPES_PK" PRIMARY KEY, 
	"NAME" VARCHAR(10) NOT NULL, 
	"WIDTH" NUMBER(*,0) NOT NULL, 
	"LENGTH" NUMBER(*,0) NOT NULL, 
	"HEIGHT" NUMBER(*,0) NOT NULL, 
	"MAXWEIGHT" NUMBER(*,0) NOT NULL, 
	"PRIORITY" NUMBER(*,0) NOT NULL, 
	"COST" NUMBER(5,2) NOT NULL
   )
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table STATUSES
--------------------------------------------------------

  CREATE TABLE STATUSES
   (	"STATUS_ID" NUMBER(*,0) CONSTRAINT "STATUSES_PK" PRIMARY KEY, 
	"NAME" VARCHAR(100) NOT NULL, 
	"STAGE" NUMBER(*,0) NOT NULL
   )
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table USERS
--------------------------------------------------------

  CREATE TABLE USERS
   (	"USER_ID" NUMBER(*,0) CONSTRAINT "USERS_PK"  PRIMARY KEY, 
	"FIRSTNAME" VARCHAR2(50) NOT NULL, 
	"LASTNAME" VARCHAR2(50) NOT NULL, 
	"LOGIN" VARCHAR2(50) NOT NULL, 
	"PASSWORD" VARCHAR2(50) NOT NULL, 
	"PHONENUMBER" NUMBER NOT NULL, 
	"EMAIL" VARCHAR2(50) NOT NULL,
	"USERTYPE" VARCHAR2(20) NOT NULL
   )
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table WAREHOUSES
--------------------------------------------------------

  CREATE TABLE WAREHOUSES
   (	"WAREHOUSE_ID" NUMBER(*,0) CONSTRAINT "WAREHOUSES_PK" PRIMARY KEY, 
	"LOCATIONID" NUMBER(*,0) NOT NULL, 
	"NAME" VARCHAR(50) NOT NULL
   )
  TABLESPACE "USERS" ;

--------------------------------------------------------
--  DDL for Table LOGS
--------------------------------------------------------


 CREATE TABLE LOGS
   (	"CODE" VARCHAR2(24 BYTE) NOT NULL,
	"TYPEID" NUMBER(*,0) NOT NULL, 
	"COURIERID" NUMBER(*,0), 
	"LORRYDRIVERID" NUMBER(*,0), 
	"SENDERID" NUMBER(*,0) NOT NULL, 
	"PARCELLOCKERID" NUMBER(*,0), 
	"DESTINATIONPARCELLOCKERID" NUMBER(*,0) NOT NULL, 
	"WAREHOUSEID" NUMBER(*,0), 
	"SENTDATE" DATE, 
	"STATUSID" NUMBER(*,0) NOT NULL, 
	"PICKUPCODE" NUMBER(7,0) NOT NULL, 
	"LOCKERNUMBER" NUMBER(*,0),
    	"OPERATION" VARCHAR2(15) NOT NULL
   )
	TABLESPACE "USERS" ;

--------------------------------------------------------
-- INSERTS
--------------------------------------------------------

Insert into LOCATIONS (LOCATION_ID,CITY,STREET,NEARESTBUILDINGNUMBER,POSTCODE) values ('LOCATION_ID_SEQ.nextval','Wroclaw','Wiejska','21','21398');
Insert into LOCATIONS (LOCATION_ID,CITY,STREET,NEARESTBUILDINGNUMBER,POSTCODE) values ('LOCATION_ID_SEQ.nextval','Wroclaw','Bycza','2','12319');
Insert into LOCATIONS (LOCATION_ID,CITY,STREET,NEARESTBUILDINGNUMBER,POSTCODE) values ('LOCATION_ID_SEQ.nextval','Warszawa','Konstytucji 3 maja','12','81723');

Insert into PARCELLOCKERS (PARCELLOCKER_ID,LOCATIONID,TYPEID,NAME) values ('PARCELLOCKER_ID_SEQ.nextval','1','1','WRO1');
Insert into PARCELLOCKERS (PARCELLOCKER_ID,LOCATIONID,TYPEID,NAME) values ('PARCELLOCKER_ID_SEQ.nextval','2','2','WRO2');
Insert into PARCELLOCKERS (PARCELLOCKER_ID,LOCATIONID,TYPEID,NAME) values ('PARCELLOCKER_ID_SEQ.nextval','3','3','WAR1');

Insert into PARCELLOCKERTYPES (PARCELLOCKERTYPE_ID,NAME,SIZEALOCKERS,SIZEBLOCKERS,SIZECLOCKERS) values ('PARCELLOCKERTYPE_ID_SEQ.nextval','Small','20','10','5');
Insert into PARCELLOCKERTYPES (PARCELLOCKERTYPE_ID,NAME,SIZEALOCKERS,SIZEBLOCKERS,SIZECLOCKERS) values ('PARCELLOCKERTYPE_ID_SEQ.nextval','Medium','30','40','20');
Insert into PARCELLOCKERTYPES (PARCELLOCKERTYPE_ID,NAME,SIZEALOCKERS,SIZEBLOCKERS,SIZECLOCKERS) values ('PARCELLOCKERTYPE_ID_SEQ.nextval','Big','30','50','40');
Insert into PARCELLOCKERTYPES (PARCELLOCKERTYPE_ID,NAME,SIZEALOCKERS,SIZEBLOCKERS,SIZECLOCKERS) values ('PARCELLOCKERTYPE_ID_SEQ.nextval','Huge','100','100','100');

Insert into PARCELS (CODE,TYPEID,COURIERID,LORRYDRIVERID,SENDERID,PARCELLOCKERID,DESTINATIONPARCELLOCKERID,WAREHOUSEID,SENTDATE,STATUSID,PICKUPCODE,LOCKERNUMBER) values ('PA++210521WRO2N1','7',null,null,'2',null,'2',null,null,'8','6155988',null);
Insert into PARCELS (CODE,TYPEID,COURIERID,LORRYDRIVERID,SENDERID,PARCELLOCKERID,DESTINATIONPARCELLOCKERID,WAREHOUSEID,SENTDATE,STATUSID,PICKUPCODE,LOCKERNUMBER) values ('PA210521WAR1N1','1',null,null,'2','1','3',null,to_date('22/05/21','RR/MM/DD'),'1','5730236','1');

Insert into PARCELTYPES (PARCELTYPE_ID,NAME,WIDTH,LENGTH,HEIGHT,MAXWEIGHT,PRIORITY,COST) values ('PARCELTYPE_ID_SEQ.nextval','A','10','20','60','10','1','5');
Insert into PARCELTYPES (PARCELTYPE_ID,NAME,WIDTH,LENGTH,HEIGHT,MAXWEIGHT,PRIORITY,COST) values ('PARCELTYPE_ID_SEQ.nextval','B','20','30','60','20','1','10');
Insert into PARCELTYPES (PARCELTYPE_ID,NAME,WIDTH,LENGTH,HEIGHT,MAXWEIGHT,PRIORITY,COST) values ('PARCELTYPE_ID_SEQ.nextval','C','60','60','60','30','1','15');
Insert into PARCELTYPES (PARCELTYPE_ID,NAME,WIDTH,LENGTH,HEIGHT,MAXWEIGHT,PRIORITY,COST) values ('PARCELTYPE_ID_SEQ.nextval','A+','10','20','60','10','2','8');
Insert into PARCELTYPES (PARCELTYPE_ID,NAME,WIDTH,LENGTH,HEIGHT,MAXWEIGHT,PRIORITY,COST) values ('PARCELTYPE_ID_SEQ.nextval','B+','20','30','60','20','2','13');
Insert into PARCELTYPES (PARCELTYPE_ID,NAME,WIDTH,LENGTH,HEIGHT,MAXWEIGHT,PRIORITY,COST) values ('PARCELTYPE_ID_SEQ.nextval','C+','60','60','60','30','2','18');
Insert into PARCELTYPES (PARCELTYPE_ID,NAME,WIDTH,LENGTH,HEIGHT,MAXWEIGHT,PRIORITY,COST) values ('PARCELTYPE_ID_SEQ.nextval','A++','10','20','60','10','3','14');
Insert into PARCELTYPES (PARCELTYPE_ID,NAME,WIDTH,LENGTH,HEIGHT,MAXWEIGHT,PRIORITY,COST) values ('PARCELTYPE_ID_SEQ.nextval','B++','20','30','60','20','3','19');
Insert into PARCELTYPES (PARCELTYPE_ID,NAME,WIDTH,LENGTH,HEIGHT,MAXWEIGHT,PRIORITY,COST) values ('PARCELTYPE_ID_SEQ.nextval','C++','60','60','60','30','3','24');

Insert into STATUSES (STATUS_ID,NAME,STAGE) values ('STATUS_ID_SEQ.nextval','Waits for courier to pick it up','2');
Insert into STATUSES (STATUS_ID,NAME,STAGE) values ('STATUS_ID_SEQ.nextval','Travels to parcel locker','2');
Insert into STATUSES (STATUS_ID,NAME,STAGE) values ('STATUS_ID_SEQ.nextval','Travels to initial warehouse','2');
Insert into STATUSES (STATUS_ID,NAME,STAGE) values ('STATUS_ID_SEQ.nextval','Waits in warehouse','2');
Insert into STATUSES (STATUS_ID,NAME,STAGE) values ('STATUS_ID_SEQ.nextval','Travels in final warehouse','2');
Insert into STATUSES (STATUS_ID,NAME,STAGE) values ('STATUS_ID_SEQ.nextval','Ready to be collected','3');
Insert into STATUSES (STATUS_ID,NAME,STAGE) values ('STATUS_ID_SEQ.nextval','Awaiting payment','1');
Insert into STATUSES (STATUS_ID,NAME,STAGE) values ('STATUS_ID_SEQ.nextval','Paid, leave at nearest parcel locker','1');
Insert into STATUSES (STATUS_ID,NAME,STAGE) values ('STATUS_ID_SEQ.nextval','Waits in warehouse for courier','2');

Insert into USERS (USER_ID,FIRSTNAME,LASTNAME,LOGIN,PASSWORD,PHONENUMBER,EMAIL,USERTYPE) values ('USER_ID_SEQ.nextval','Przykladowy','Menadzer','manager','manager','758493857','manager@poczta.pl','Manager');
Insert into USERS (USER_ID,FIRSTNAME,LASTNAME,LOGIN,PASSWORD,PHONENUMBER,EMAIL,USERTYPE) values ('USER_ID_SEQ.nextval','Przykladowy','Klient','client','client','253647285','client@poczta.pl','Client');
Insert into USERS (USER_ID,FIRSTNAME,LASTNAME,LOGIN,PASSWORD,PHONENUMBER,EMAIL,USERTYPE) values ('USER_ID_SEQ.nextval','Przykladowy','Kurier','courier','courier','967483894','courier@poczta.pl','Courier');
Insert into USERS (USER_ID,FIRSTNAME,LASTNAME,LOGIN,PASSWORD,PHONENUMBER,EMAIL,USERTYPE) values ('USER_ID_SEQ.nextval','Przykladowy','Kierowca TIRa','lorrydriver','lorrydriver','776855934','kierowca@poczta.pl','LorryDriver');
Insert into USERS (USER_ID,FIRSTNAME,LASTNAME,LOGIN,PASSWORD,PHONENUMBER,EMAIL,USERTYPE) values ('USER_ID_SEQ.nextval','Tomasz','Niemadry','tniem','1234','879607650','tomasz@poczta.pl','Client');

Insert into WAREHOUSES (WAREHOUSE_ID,LOCATIONID,NAME) values ('WAREHOUSE_ID_SEQ.nextval','1','Wroclaw1');
Insert into WAREHOUSES (WAREHOUSE_ID,LOCATIONID,NAME) values ('WAREHOUSE_ID_SEQ.nextval','3','Warszawa1');

/


/
--------------------------------------------------------
--  FOREIGN KEYS
--------------------------------------------------------

  ALTER TABLE PARCELLOCKERS ADD CONSTRAINT "PARCELLOCKERS_FK1" FOREIGN KEY ("LOCATIONID")
	  REFERENCES LOCATIONS ("LOCATION_ID");
  ALTER TABLE PARCELLOCKERS ADD CONSTRAINT "PARCELLOCKERS_FK2" FOREIGN KEY ("TYPEID")
	  REFERENCES PARCELLOCKERTYPES ("PARCELLOCKERTYPE_ID");

  ALTER TABLE PARCELS ADD CONSTRAINT "PARCELS_FK1" FOREIGN KEY ("TYPEID")
	  REFERENCES PARCELTYPES ("PARCELTYPE_ID");
  ALTER TABLE PARCELS ADD CONSTRAINT "PARCELS_FK2" FOREIGN KEY ("COURIERID")
	  REFERENCES USERS ("USER_ID");
  ALTER TABLE PARCELS ADD CONSTRAINT "PARCELS_FK3" FOREIGN KEY ("LORRYDRIVERID")
	  REFERENCES USERS ("USER_ID");
  ALTER TABLE PARCELS ADD CONSTRAINT "PARCELS_FK4" FOREIGN KEY ("SENDERID")
	  REFERENCES USERS ("USER_ID");
  ALTER TABLE PARCELS ADD CONSTRAINT "PARCELS_FK5" FOREIGN KEY ("PARCELLOCKERID")
	  REFERENCES PARCELLOCKERS ("PARCELLOCKER_ID");
  ALTER TABLE PARCELS ADD CONSTRAINT "PARCELS_FK6" FOREIGN KEY ("DESTINATIONPARCELLOCKERID")
	  REFERENCES PARCELLOCKERS ("PARCELLOCKER_ID");
  ALTER TABLE PARCELS ADD CONSTRAINT "PARCELS_FK7" FOREIGN KEY ("WAREHOUSEID")
	  REFERENCES WAREHOUSES("WAREHOUSE_ID");
  ALTER TABLE PARCELS ADD CONSTRAINT "PARCELS_FK8" FOREIGN KEY ("STATUSID")
	  REFERENCES STATUSES ("STATUS_ID");

  ALTER TABLE WAREHOUSES ADD CONSTRAINT "WAREHOUSES_FK1" FOREIGN KEY ("LOCATIONID")
	  REFERENCES LOCATIONS ("LOCATION_ID");

--------------------------------------------------------
--  VIEWS
--------------------------------------------------------

CREATE VIEW CLIENTPARCELVIEW
	AS SELECT PARCELS.CODE AS "CODE", PARCELTYPES.NAME AS "TYPE", STATUSES.NAME AS "STATUS", 
        PARCELLOCKERS.NAME AS "CURRENT PARCEL LOCKER", PARCELS.SENTDATE AS "SENT DATE"
    
 	FROM PARCELS
 	JOIN PARCELTYPES ON parceltypes.parceltype_id=parcels.typeid
 	JOIN STATUSES ON statuses.status_id = parcels.statusid
 	JOIN PARCELLOCKERS ON PARCELLOCKERS.PARCELLOCKER_ID = PARCELS.PARCELLOCKERID;

CREATE VIEW COURIERPARCELVIEW
  	AS SELECT PARCELS.CODE AS "CODE", PARCELTYPES.NAME AS "TYPE", PARCELTYPES.PRIORITY AS "PRIORITY", 
        PARCELLOCKERS.NAME AS "DESTINATION PARCEL LOCKER", WAREHOUSES.WAREHOUSE_ID AS "WAREHOUSE ID",
        PARCELS.SENTDATE AS "SENT DATE"
    
 	FROM PARCELS
 	JOIN PARCELTYPES ON parceltypes.parceltype_id=parcels.typeID
 	JOIN PARCELLOCKERS ON PARCELLOCKERS.PARCELLOCKER_ID = PARCELS.DESTINATIONPARCELLOCKERID
    	JOIN WAREHOUSES ON WAREHOUSES.WAREHOUSE_ID = PARCELS.WAREHOUSEID;

 CREATE VIEW PERSONALVIEW
	AS SELECT USERS.FIRSTNAME AS "FIRST NAME", USERS.LASTNAME AS "LAST NAME", USERS.PHONENUMBER AS "PHONE NUMBER", 
        USERS.EMAIL AS "EMAIL", USERS.LOGIN AS "LOGIN", USERS.PASSWORD AS "PASSWORD"
    
 	FROM USERS;

--------------------------------------------------------
--  TRIGGER
--------------------------------------------------------

CREATE OR REPLACE TRIGGER LOGS
  AFTER INSERT OR DELETE OR UPDATE ON PARCELS
  FOR EACH ROW
  BEGIN
    IF INSERTING THEN
      INSERT INTO LOGS (OPERATION, CODE, TYPEID, COURIERID, LORRYDRIVERID, SENDERID, PARCELLOCKERID, DESTINATIONPARCELLOCKERID, WAREHOUSEID, SENTDATE, STATUSID, PICKUPCODE, LOCKERNUMBER)
      VALUES ('INSERT', :NEW.CODE, :NEW.TYPEID, :NEW.COURIERID, :NEW.LORRYDRIVERID, :NEW.SENDERID, :NEW.PARCELLOCKERID, :NEW.DESTINATIONPARCELLOCKERID, :NEW.WAREHOUSEID, :NEW.SENTDATE, :NEW.STATUSID, :NEW.PICKUPCODE, :NEW.LOCKERNUMBER);
    ELSIF DELETING THEN
      INSERT INTO LOGS (OPERATION, CODE, TYPEID, COURIERID, LORRYDRIVERID, SENDERID, PARCELLOCKERID, DESTINATIONPARCELLOCKERID, WAREHOUSEID, SENTDATE, STATUSID, PICKUPCODE, LOCKERNUMBER)
      VALUES ('DELETE', :OLD.CODE, :OLD.TYPEID, :OLD.COURIERID, :OLD.LORRYDRIVERID, :OLD.SENDERID, :OLD.PARCELLOCKERID, :OLD.DESTINATIONPARCELLOCKERID, :OLD.WAREHOUSEID, :OLD.SENTDATE, :OLD.STATUSID, :OLD.PICKUPCODE, :OLD.LOCKERNUMBER);
    ELSIF UPDATING THEN
      INSERT INTO LOGS (OPERATION, CODE, TYPEID, COURIERID, LORRYDRIVERID, SENDERID, PARCELLOCKERID, DESTINATIONPARCELLOCKERID, WAREHOUSEID, SENTDATE, STATUSID, PICKUPCODE, LOCKERNUMBER)
      VALUES ('UPDATE', :NEW.CODE, :NEW.TYPEID, :NEW.COURIERID, :NEW.LORRYDRIVERID, :NEW.SENDERID, :NEW.PARCELLOCKERID, :NEW.DESTINATIONPARCELLOCKERID, :NEW.WAREHOUSEID, :NEW.SENTDATE, :NEW.STATUSID, :NEW.PICKUPCODE, :NEW.LOCKERNUMBER);
    END IF;
  END;


